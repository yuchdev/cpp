#pragma once

// Демонстрируется механизм SEH
// Он непереносим с платвормы Win
// и не вызывает деструкторы при раскрутке стека
#if defined(_WIN32) || defined(_WIN64)

// Структурированная обработка исключений на самом деле представляет собой набор сервисов
// операционной системы Windows которые доступны программам, написанным на любых языках

class sehhandler
{
public:
	int filter( unsigned code, struct _EXCEPTION_POINTERS* ep );
	void test_seh();
};


//MS определили несколько синонимов к одной и той же функции.
//Например, excpt.h имеет следующие объявления и определения :
//unsigned long __cdecl _exception_code(void);
//#define GetExceptionCode _exception_code 
//#define exception_code _exception_code 
// Вероятно, это сделано для поддержки разных соглашений кодирования


/*
SEHовские AV означают, например, использование невалидного указателя, или прочу кучи. 
Это нельзя обработать, поэтому часто лучше падать и отлаживать/смотреть дамп. 
Однако для каких-то приложений может быть лучше попытаться продолжить работу, выдав только предупреждение.

EXCEPTION_STACK_OVERFLOW точно нельзя ловить просто, оно требует некторой дополнительной обработки (_resetstkoflw)

По хорошему, следует транслировать SE в С++ исключение установив _set_se_translator()
что catch(...) обрабатывает все SE безусловно.
*/

#endif
